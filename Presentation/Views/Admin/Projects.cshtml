@model ProjectViewModel
@{
	Layout = "_PortalLayout";

	ViewData["Title"] = Model.Title;
}

@await Html.PartialAsync("Partials/Components/_AddProjectModal", Model.AddProjectModel)
@await Html.PartialAsync("Partials/Components/_EditProjectModal", Model.EditProjectModel)

<section id="projects">
	<header class="portal-header">
		<h2>Projects</h2>
		<button type="button" data-modal="true" data-target="#addProjectModal" class="button btn-blue btn-add">Add Project</button>
	</header>

	<div class="project-statuses">
		<p>ALL [@Model.Projects.Count()] </p>
		<p>STARTED [@Model.Projects.Where(x => x.Status.StatusName == "Started").Count()]</p>
		<p>NOT STARTED [@Model.Projects.Where(x => x.Status.StatusName == "Not started").Count()]</p>
		<p>COMPLETED [@Model.Projects.Where(x => x.Status.StatusName == "Completed").Count()]</p>
	</div>

	<div class="project-wrapper">
		@foreach (var project in Model.Projects)
		{
			@await Html.PartialAsync("Partials/Components/_ProjectCard", project)
		}
	</div>

</section>



<script>
	document.addEventListener('DOMContentLoaded', () => {
			const preSelectedMembers = []

	initTagSelector({
		containerId: 'tagged-users',
		inputId: 'user-search',
		resultsId: 'user-search-results',
		searchUrl: (query) => '@Url.Action("SearchMember", "Member")' + '?term=' + encodeURIComponent(query),
		displayProperty: 'fullName',
		imageProperty: 'imageUrl',
		tagClass: 'user-tag',
		avatarFolder: '/images/members',
		emptyMessage: 'No members found.',
		preselected: preSelectedMembers,
		selectedInputIds: 'SelectedMemberIds'
	})
	})

</script>