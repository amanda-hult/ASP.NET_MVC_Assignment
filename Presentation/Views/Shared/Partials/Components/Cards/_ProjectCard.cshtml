@model ProjectModel

<div class="project-card" data-status="@Model.Status.StatusName.ToLower()">
    @await Html.PartialAsync("Partials/Components/_EditProjectDropdown", Model)
    <div class="project-card-header">

        <div>
            <img src="@Model.ProjectImageUrl" alt="Project logo">
        </div>

        <div>
            <h6>@Model.ProjectName</h6>
            <p>@Model.Client.ClientName</p>
        </div>

        <button type="button" data-type="dropdown" data-target="#editProjectDropdown-@Model.ProjectId" class="fa-duotone fa-solid fa-colon fa-rotate-90 cursor btn-edit" style="--fa-secondary-opacity: 1;">
        </button>

    </div>

    <div>
        <p>@Html.Raw(Model.Description)</p>
    </div>

    <div class="project-card-footer">
        @if (Model.DaysLeft.HasValue)
        {
            <div class="time-wrapper @(Model.DaysLeft < 6 ? "error" : "normal")">
                <i class="fa-duotone fa-solid fa-clock"></i>
                @if (Model.DaysLeft < 1)
                {
                    <p class="error">Already ended</p>
                }
                else if (Model.DaysLeft == 1)
                {
                    <p class="error">1 day left</p>
                }
                else if (Model.DaysLeft < 7)
                {
                    <p class="@(Model.DaysLeft < 6 ? "error" : "normal")">@Model.DaysLeft days left</p>
                }
                else
                {
                    var weeks = Math.Ceiling(@Model.DaysLeft.Value / 7.0);
                    <p>@weeks week@(weeks > 1 ? "s" : "") left</p>
                }
            </div>
        }

        <div class="members-wrapper">

            @foreach (var projectUser in Model.ProjectUsers.Take(3))
            {
                <img src="@projectUser.User.UserImageUrl">
            }
        </div>
    </div>
</div>